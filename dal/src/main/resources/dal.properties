# ============= Datasource =======================
spring.datasource.url=${db-url}
spring.datasource.username=${db-user}
spring.datasource.password=${db-password}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#The maximum number of established connections to the database
spring.datasource.max-active=10
#The number of connections that will be established when the connection pool is created
spring.datasource.initial-size=10
#The minimum number of connections always established after the connection pool has reached this size
spring.datasource.min-idle=1
#Validate on idle connection
spring.datasource.test-while-idle=true
# Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
# VD: disable this property remove binding connection to request. It's very critical for performance with PostgreSQL
spring.jpa.open-in-view=false
# Underscore naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.use-new-id-generator-mappings=true
# Leak detection
spring.datasource.hikari.leakDetectionThreshold=2000
# MBean for diagnostic purposes
#spring.datasource.hikari.registerMbeans=true
spring.datasource.jmx-enabled=true
# Validation query
spring.datasource.hikari.connection-test-query = SELECT 1
# Flyway
dal.flyway.repairBefore=false

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect


# For debug SQL queries
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate=INFO